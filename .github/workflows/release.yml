name: Release

on:
  push:
    tags:
      - '*'

jobs:
  github-release-draft:
    name: 'Create GitHub Release Draft'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
      release-id: ${{ steps.create-release.outputs.release-id }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Create Release Draft
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_output=$(gh release create ${{ steps.get_version.outputs.VERSION }} \
            --title "${{ steps.get_version.outputs.VERSION }}" \
            --notes "Release ${{ steps.get_version.outputs.VERSION }}" \
            --draft)
          release_id=$(echo "$release_output" | grep -o 'releases/[0-9]*' | cut -d'/' -f2)
          echo "release-id=$release_id" >> $GITHUB_OUTPUT

  ubuntu-binary:
    name: 'Upload Binary for Ubuntu'
    runs-on: ubuntu-24.04
    needs: github-release-draft
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install packages to build external dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y meson ninja-build nasm yasm build-essential autoconf automake libtool pkg-config yasm cmake
      - run: rustup update stable
      - run: cargo build --release
      - run: mv target/release/hisui hisui-${{ needs.github-release-draft.outputs.version }}.ubuntu-24.04_x86_64
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.github-release-draft.outputs.version }} \
            hisui-${{ needs.github-release-draft.outputs.version }}.ubuntu-24.04_x86_64

  ubuntu-arm64-binary:
    name: 'Upload Binary for Ubuntu'
    runs-on: ubuntu-24.04-arm
    needs: github-release-draft
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install packages to build external dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y meson ninja-build nasm yasm build-essential autoconf automake libtool pkg-config yasm cmake
      - run: rustup update stable
      - run: cargo build --release
      - run: mv target/release/hisui hisui-${{ needs.github-release-draft.outputs.version }}.ubuntu-24.04_arm64
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.github-release-draft.outputs.version }} \
            hisui-${{ needs.github-release-draft.outputs.version }}.ubuntu-24.04_arm64

  macos-binary:
    name: 'Upload Binary for MacOS'
    runs-on: macos-latest
    needs: github-release-draft
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - run: rustup update stable
      - name: Install packages to build external dependencies
        run: |
          brew update
          brew install meson ninja nasm yasm cmake automake autoconf libtool pkg-config
      - run: cargo build --release
      - run: mv target/release/hisui hisui-${{ needs.github-release-draft.outputs.version }}.macos_arm64
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.github-release-draft.outputs.version }} \
            hisui-${{ needs.github-release-draft.outputs.version }}.macos_arm64

  slack_notify_failed:
    needs: [github-release-draft, ubuntu-binary, ubuntu-arm64-binary, macos-binary]
    timeout-minutes: 20
    runs-on: ubuntu-24.04
    if: failure()
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: hisui
          SLACK_COLOR: danger
          SLACK_ICON_EMOJI: ":japanese_ogre:"
          SLACK_TITLE: "FAILED"
          SLACK_MESSAGE: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{github.event.head_commit.message }}>
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
